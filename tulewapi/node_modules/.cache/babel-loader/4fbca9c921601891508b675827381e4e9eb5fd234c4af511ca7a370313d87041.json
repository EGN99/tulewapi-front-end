{"ast":null,"code":"var _jsxFileName = \"/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/Favorites.js\",\n  _s = $RefreshSig$();\n// import React, {useEffect, useState} from 'react';\n\n// const Favorites=()=>{\n\nconst fetchData = () => {\n  fetch('http://localhost:8001/restaurant').then(response => response.json()).then(data => {\n    const favoriteRestaurants = data.filter(restaurant => restaurant.isFavorite === true);\n    setFavorites(favoriteRestaurants);\n  }).catch(error => console.error(error));\n};\n\n//     useEffect(()=>{\n//         fetchData()\n//     },[])\n\n// function toggleFavorite(id) {\n//   fetch(`http://localhost:8001/restaurant/${id}`, {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({\n//       isFavorite: !isFavorite\n//     })\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//         console.log(data)\n\n//     });\n// }\n\n//     const [favorites, setFavorites] = useState([]);\n//       const isFavorite = (id) => favorites.includes(id);\n//       const addToFavorites = (id) => {\n//         if (isFavorite(id)) {\n//           setFavorites(favorites.filter((favoriteId) => favoriteId !== id));\n//         } else {\n//           setFavorites([...favorites, id]);\n//           toggleFavorite(id);\n//         }\n//       };\n\n//     return(\n//         <div style={{\n//         marginLeft:'30px'}}>\n//             <h1 style={{\n//                 fontSize:'30px',\n//                 textAlign:'center',\n//             }}>Favorites</h1>\n//             <p style={{\n//                 textAlign:\"center\"\n//             }}>All the restaurants you liked will appear here!</p>\n//             <div className=\"restaurant-card-container\" style={{ width:'100%',}}>\n//                 <div className=\"ui four column grid\" >\n//        </div>\n//        </div>\n//         <div className=\"row\">\n//           {favorites.map((restaurant) => (\n//             <div\n//               className=\"col-md-3\" id=\"restaurant-card\"\n//               key={restaurant.id}         \n//             >\n//               <img style={{height:'auto', width:'100%',}} src={restaurant.image} alt={restaurant.name} />\n//               <h2>{restaurant.name}</h2>\n//               <p className=\"card-text\">{restaurant.description}</p>\n//               <a style={{fontSize:'30px',}} className=\"btn\" onClick={() => addToFavorites(restaurant.id)}>\n//               <i className={`${isFavorite(restaurant.id) ? \"far\" : \"fas\"} fa-heart`}></i>\n//               </a>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//     )\n// }\n\n// export default Favorites; \nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/restaurant').then(response => response.json()).then(data => {\n      const favoriteRestaurants = data.filter(restaurant => restaurant.isFavorite === true);\n      setFavorites(favoriteRestaurants);\n    }).catch(error => console.error(error));\n  }, []);\n  function toggleFavorite(id, isFav) {\n    fetch(`http://localhost:8001/restaurant/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        isFavorite: !isFav\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n  const isFavorite = id => favorites.find(fav => fav.id === id);\n  const addToFavorites = id => {\n    const currentFav = isFavorite(id);\n    if (currentFav) {\n      setFavorites(favorites.filter(favorite => favorite.id !== id));\n      toggleFavorite(id, true);\n    } else {\n      setFavorites([...favorites, {\n        id\n      }]);\n      toggleFavorite(id, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '30px',\n        textAlign: 'center'\n      },\n      children: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"All the restaurants you liked will appear here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-card-container\",\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui four column grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: favorites.map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        id: \"restaurant-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            height: 'auto',\n            width: '100%'\n          },\n          src: restaurant.image,\n          alt: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: restaurant.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            fontSize: '30px'\n          },\n          className: \"btn\",\n          onClick: () => addToFavorites(restaurant.id),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `${currentFav ? 'far' : 'fas'} fa-heart`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Favorites, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["fetchData","fetch","then","response","json","data","favoriteRestaurants","filter","restaurant","isFavorite","setFavorites","catch","error","console","React","useEffect","useState","Favorites","favorites","toggleFavorite","id","isFav","method","headers","body","JSON","stringify","log","find","fav","addToFavorites","currentFav","favorite","marginLeft","fontSize","textAlign","width","map","height","image","name","description"],"sources":["/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/Favorites.js"],"sourcesContent":["// import React, {useEffect, useState} from 'react';\n\n// const Favorites=()=>{\n\nconst fetchData = () => {\n    fetch('http://localhost:8001/restaurant')\n      .then((response) => response.json())\n      .then((data) => {\n        const favoriteRestaurants = data.filter((restaurant) => restaurant.isFavorite === true);\n        setFavorites(favoriteRestaurants);\n      })\n      .catch((error) => console.error(error));\n    }\n\n//     useEffect(()=>{\n//         fetchData()\n//     },[])\n\n// function toggleFavorite(id) {\n//   fetch(`http://localhost:8001/restaurant/${id}`, {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({\n//       isFavorite: !isFavorite\n//     })\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//         console.log(data)\n       \n//     });\n// }\n\n//     const [favorites, setFavorites] = useState([]);\n//       const isFavorite = (id) => favorites.includes(id);\n//       const addToFavorites = (id) => {\n//         if (isFavorite(id)) {\n//           setFavorites(favorites.filter((favoriteId) => favoriteId !== id));\n//         } else {\n//           setFavorites([...favorites, id]);\n//           toggleFavorite(id);\n//         }\n//       };\n\n\n//     return(\n//         <div style={{\n//         marginLeft:'30px'}}>\n//             <h1 style={{\n//                 fontSize:'30px',\n//                 textAlign:'center',\n//             }}>Favorites</h1>\n//             <p style={{\n//                 textAlign:\"center\"\n//             }}>All the restaurants you liked will appear here!</p>\n//             <div className=\"restaurant-card-container\" style={{ width:'100%',}}>\n//                 <div className=\"ui four column grid\" >\n//        </div>\n//        </div>\n//         <div className=\"row\">\n//           {favorites.map((restaurant) => (\n//             <div\n//               className=\"col-md-3\" id=\"restaurant-card\"\n//               key={restaurant.id}         \n//             >\n//               <img style={{height:'auto', width:'100%',}} src={restaurant.image} alt={restaurant.name} />\n//               <h2>{restaurant.name}</h2>\n//               <p className=\"card-text\">{restaurant.description}</p>\n//               <a style={{fontSize:'30px',}} className=\"btn\" onClick={() => addToFavorites(restaurant.id)}>\n//               <i className={`${isFavorite(restaurant.id) ? \"far\" : \"fas\"} fa-heart`}></i>\n//               </a>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//     )\n// }\n\n// export default Favorites; \nimport React, { useEffect, useState } from 'react';\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/restaurant')\n      .then((response) => response.json())\n      .then((data) => {\n        const favoriteRestaurants = data.filter((restaurant) => restaurant.isFavorite === true);\n        setFavorites(favoriteRestaurants);\n      })\n      .catch((error) => console.error(error));\n  }, []);\n\n  function toggleFavorite(id, isFav) {\n    fetch(`http://localhost:8001/restaurant/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        isFavorite: !isFav,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      });\n  }\n\n  const isFavorite = (id) => favorites.find((fav) => fav.id === id);\n\n  const addToFavorites = (id) => {\nconst currentFav = isFavorite(id);\n\n    if (currentFav) {\n      setFavorites(favorites.filter((favorite) => favorite.id !== id));\n      toggleFavorite(id, true);\n    } else {\n      setFavorites([...favorites, { id }]);\n      toggleFavorite(id, false);\n    }\n  };\n\n  return (\n    <div style={{ marginLeft: '30px' }}>\n      <h1 style={{ fontSize: '30px', textAlign: 'center' }}>Favorites</h1>\n      <p style={{ textAlign: 'center' }}>\n        All the restaurants you liked will appear here!\n      </p>\n      <div className=\"restaurant-card-container\" style={{ width: '100%' }}>\n        <div className=\"ui four column grid\"></div>\n      </div>\n      <div className=\"row\">\n        {favorites.map((restaurant) => (\n          <div\n            className=\"col-md-3\"\n            id=\"restaurant-card\"\n            key={restaurant.id}\n          >\n            <img\n              style={{ height: 'auto', width: '100%' }}\n              src={restaurant.image}\n              alt={restaurant.name}\n            />\n            <h2>{restaurant.name}</h2>\n            <p className=\"card-text\">{restaurant.description}</p>\n            <a\n              style={{ fontSize: '30px' }}\n              className=\"btn\"\n              onClick={() => addToFavorites(restaurant.id)}\n            >\n              <i\n                className={`${currentFav ? 'far' : 'fas'} fa-heart`}\n              ></i>\n            </a>\n            </div>\n            ))}\n          </div>\n        </div>\n    )\n}\n\nexport default Favorites; \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}