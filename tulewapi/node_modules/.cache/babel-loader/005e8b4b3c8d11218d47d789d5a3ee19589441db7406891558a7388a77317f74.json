{"ast":null,"code":"var _jsxFileName = \"/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(handleCloseModal) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const modalRef = React.useRef();\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleCloseModal();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleCloseModal, modalRef]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"http://localhost:8001/user\");\n    const db = await response.json();\n    const user = db.users.find(user => user.username === username && user.password === password);\n    if (user) {\n      console.log(\"Login successful!\");\n    } else {\n      console.error(\"Incorrect username or password.\");\n    }\n  };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (isLogin) {\n  //     // Send a request to the server to log the user in\n\n  //     console.log(username, password);\n  //   } else {\n  //     // Send a request to the server to sign the user up\n\n  //     console.log(username, password, confirmPassword);\n  //   }\n  // };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    handleCloseModal: handleCloseModal,\n    style: {\n      background: 'white',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px #ccc'\n    },\n    ref: modalRef,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          float: 'left'\n        },\n        type: \"submit\",\n        children: [isLogin ? \"Login\" : \"Sign Up\", \" onClick\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          float: 'right'\n        },\n        type: \"button\",\n        onClick: toggleForm,\n        children: isLogin ? \"Sign Up\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"M0meIaCkacJDzR+ZfST3i8+vH6o=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","LoginForm","handleCloseModal","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","isLogin","setIsLogin","modalRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSubmit","preventDefault","response","fetch","db","json","user","users","find","console","log","error","toggleForm","background","position","top","left","transform","padding","borderRadius","boxShadow","e","value","float"],"sources":["/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/LoginForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction LoginForm(handleCloseModal) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n  \n\n  const modalRef = React.useRef();\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleCloseModal();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleCloseModal, modalRef]);\n\n\nconst handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const response = await fetch(\"http://localhost:8001/user\");\n    const db = await response.json();\n\n    const user = db.users.find(\n      (user) => user.username === username && user.password === password\n    );\n\n    if (user) {\n      console.log(\"Login successful!\");\n    } else {\n      console.error(\"Incorrect username or password.\");\n    }\n  };\n\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (isLogin) {\n  //     // Send a request to the server to log the user in\n\n  //     console.log(username, password);\n  //   } else {\n  //     // Send a request to the server to sign the user up\n\n  //     console.log(username, password, confirmPassword);\n  //   }\n  // };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return (\n    <div handleCloseModal={handleCloseModal} \n    style={{\n      background: 'white',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px #ccc'\n    }} ref={modalRef}>\n      <form onSubmit={handleSubmit}>\n        \n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <br />\n        {!isLogin && (\n          <label>\n            Confirm Password:\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </label>\n        )}\n        <br />\n        <button className=\"btn btn-success\" style={{float:'left',}} type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"} onClick</button>\n        <button className=\"btn btn-success\" style={{float:'right',}} type=\"button\" onClick={toggleForm}>\n          {isLogin ? \"Sign Up\" : \"Login\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}