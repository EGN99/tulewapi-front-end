{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Explore() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const isFavorite = id => favorites.includes(id);\n  useEffect(() => {\n    fetch('http://localhost:9292/restaurants').then(response => response.json()).then(data => {\n      setRestaurants(data);\n    });\n  });\n  const addToFavorites = async id => {\n    if (isFavorite(id)) {\n      setFavorites(favorites.filter(favoriteId => favoriteId !== id));\n      const response = await fetch(`http://localhost:9292/restaurants/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isFavorite: false\n        })\n      })\n      // handle the response as needed\n      .then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    } else {\n      setFavorites([...favorites, id]);\n      const response = await fetch(`http://localhost:9292/restaurants/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isFavorite: true\n        })\n      })\n      // handle the response as needed\n      .then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Explore, \"7oDjCrefbj15iM3wowFXnwVID2s=\");\n_c = Explore;\nexport default Explore;\nvar _c;\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"names":["React","useEffect","useState","Explore","restaurants","setRestaurants","favorites","setFavorites","isFavorite","id","includes","fetch","then","response","json","data","addToFavorites","filter","favoriteId","method","headers","body","JSON","stringify","console","log"],"sources":["/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Explore.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\n\nfunction Explore(){\n\n    const [restaurants, setRestaurants] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const isFavorite = (id) => favorites.includes(id);\n    useEffect (()=> {\n      fetch('http://localhost:9292/restaurants')\n      .then((response) => response.json())\n      .then((data) => {\n        setRestaurants(data);\n      })})\n\n    const addToFavorites = async (id) => {\n        if (isFavorite(id)) {\n\n          setFavorites(favorites.filter((favoriteId) => favoriteId !== id));\n          const response = await fetch(`http://localhost:9292/restaurants/${id}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ isFavorite: false }),\n          })\n              // handle the response as needed\n              .then(response => response.json())\n              .then(data => {\n              console.log(data)\n          });\n        } else {\n\n          setFavorites([...favorites, id]);\n          const response = await fetch(`http://localhost:9292/restaurants/${id}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ isFavorite: true }),\n          })\n              // handle the response as needed\n              .then(response => response.json())\n              .then(data => {\n              console.log(data)\n          });\n        }\n        };\n\n    return (\n\n        <>\n        </>\n        \n    )\n}\n\nexport default Explore;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAElD,SAASC,OAAO,GAAE;EAAA;EAEd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMM,UAAU,GAAIC,EAAE,IAAKH,SAAS,CAACI,QAAQ,CAACD,EAAE,CAAC;EACjDR,SAAS,CAAE,MAAK;IACdU,KAAK,CAAC,mCAAmC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdV,cAAc,CAACU,IAAI,CAAC;IACtB,CAAC,CAAC;EAAA,CAAC,CAAC;EAEN,MAAMC,cAAc,GAAG,MAAOP,EAAE,IAAK;IACjC,IAAID,UAAU,CAACC,EAAE,CAAC,EAAE;MAElBF,YAAY,CAACD,SAAS,CAACW,MAAM,CAAEC,UAAU,IAAKA,UAAU,KAAKT,EAAE,CAAC,CAAC;MACjE,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAAE,qCAAoCF,EAAG,EAAC,EAAE;QACtEU,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,UAAU,EAAE;QAAM,CAAC;MAC5C,CAAC;MACG;MAAA,CACCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACdS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,MAAM;MAELR,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,EAAE,CAAC,CAAC;MAChC,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAAE,qCAAoCF,EAAG,EAAC,EAAE;QACtEU,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,UAAU,EAAE;QAAK,CAAC;MAC3C,CAAC;MACG;MAAA,CACCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACdS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACrB,CAAC,CAAC;IACJ;EACA,CAAC;EAEL,oBAEI,qCACG;AAGX;AAAC,GApDQZ,OAAO;AAAA,KAAPA,OAAO;AAsDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}