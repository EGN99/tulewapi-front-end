[{"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/index.js":"1","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/App.js":"2","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/reportWebVitals.js":"3","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Title.js":"4","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Navbar.js":"5","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Home.js":"6","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Favorites.js":"7","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Review.js":"8","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/MyRestaurant.js":"9","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/LoginForm.js":"10","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Footer.js":"11","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Explore.js":"12","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/SearchResults.js":"13","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/SearchBar.js":"14","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Admin.js":"15"},{"size":536,"mtime":1674601634769,"results":"16","hashOfConfig":"17"},{"size":1480,"mtime":1678375940587,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1674572269888,"results":"19","hashOfConfig":"17"},{"size":446,"mtime":1677846605711,"results":"20","hashOfConfig":"17"},{"size":1736,"mtime":1678376202682,"results":"21","hashOfConfig":"17"},{"size":1284,"mtime":1677913708954,"results":"22","hashOfConfig":"17"},{"size":2551,"mtime":1677588342503,"results":"23","hashOfConfig":"17"},{"size":3418,"mtime":1677823244650,"results":"24","hashOfConfig":"17"},{"size":3734,"mtime":1677851520173,"results":"25","hashOfConfig":"17"},{"size":3897,"mtime":1677870111742,"results":"26","hashOfConfig":"17"},{"size":1320,"mtime":1675241220698,"results":"27","hashOfConfig":"17"},{"size":3173,"mtime":1677920182295,"results":"28","hashOfConfig":"17"},{"size":1991,"mtime":1678348529854,"results":"29","hashOfConfig":"17"},{"size":962,"mtime":1677919051992,"results":"30","hashOfConfig":"17"},{"size":149,"mtime":1678375975933,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l0da3f",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/index.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/App.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/reportWebVitals.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Title.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Navbar.js",["81"],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Home.js",["82"],[],"import React, { useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Home (){\n  const [searchTerm, setSearchTerm] = useState('');\n  let navigate = useNavigate();\n\n      const handleSubmit = (e) => {\n          e.preventDefault();\n          if (searchTerm.length > 0) {\n            localStorage.setItem('searchTerm', searchTerm);\n            navigate('/SearchResults');\n          } else {\n            alert('Input something to search');\n          }\n        };\n\n    return (\n\n      <div>\n        <div style={{backgroundImage: `url(\"https://www.businesslist.co.ke/img/cats/restaurants.jpg\")`, height:\"721px\",}}>\n          <div  className=\"searchArea\" >\n        <form onSubmit={handleSubmit} style={{\n          marginTop:'300px',\n        }} className=\"d-flex\" role=\"search\">\n        <input style={{\n          padding:'10px',\n          marginLeft:'200px',\n        }}onChange={(e)=>setSearchTerm(e.target.value)}\n          className=\"form-control me-2\" type=\"search\" placeholder=\"Find Your Favorite Restaurants\" aria-label=\"Search\"/>\n          \n        <button style={{width:'70px',fontSize:'12px', padding:'0',}} className=\"btn btn-warning\" >Let's Go </button>\n        </form>\n        </div> \n        </div>\n       </div>\n);  \n}\n\nexport default Home;","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Favorites.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Review.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/MyRestaurant.js",["83"],[],"import React, {useEffect, useState} from 'react';\nimport { useParams } from \"react-router-dom\";\n\n\nconst MyRestaurant=()=>{\n\n    const { id } = useParams();\n    const [restaurant, setRestaurant] = useState(null);\n    const [myReview,setmyReview]=useState(\"\")\n\n    const getRestaurant=()=>{\n\n        fetch(`http://localhost:9292/myrestaurant/${id}`)\n            .then(response => response.json())\n            .then(data => {\n                setRestaurant(data);\n        }\n        );\n    }\n\n    useEffect(() => {\n        getRestaurant();\n    }, [id]);\n\n     const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch('http://localhost:9292/reviews', {\n        method: 'POST',\n        body: JSON.stringify({ myReview }),\n        headers: { 'Content-Type': 'application/json' },\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            setmyReview('');\n            console.log(data);\n        });\n    };\n\n    return(\n        <div>\n        {restaurant ? (\n            <div>\n                <div style={{textAlign:'center'}}>\n                    <h2>{restaurant.name}</h2>\n                    <img style={{height:'550px', width:'auto',}} src={restaurant.image_url} alt={restaurant.name} />\n                    <p>Address:{restaurant.address}</p>\n                </div>\n                <div style={{width: '80%'}}>\n                    <form onSubmit={handleSubmit}>\n                        <div style={{alignItems:'center',\n                    }}>\n                        <div style={{\n                                padding:'25px',\n                                marginLeft:'380px',\n                        }} className=\"mb-3\">\n                        <label htmlFor=\"review-restaurant\"  className=\"form-label\">Leave a review of {restaurant.name}</label>\n                        <input  style={{\n                                padding:'10px',\n                                borderRadius:'15px',\n                        }} value={myReview} onChange={(e) => setmyReview(e.target.value)} type=\"text\" placeholder='Tell us everything !' className=\"form-control\" id=\"review\"/>\n                        <button style={{\n                                padding:'15px',\n                                marginTop:'15px',\n                                marginLeft:'480px',\n                                borderRadius:'5px',\n                                fontSize:'13px',\n        \n                        }} type=\"submit\" className=\"btn btn-dark\" >Submit</button>\n                        </div>\n                    \n                        \n                        </div>\n\n                    </form>\n                        <ul style={{listStyleType:'none', marginLeft:'370px',}}className=\"reviewList\">\n                            {restaurant.reviews.map((review) => (\n                            <li key={review.id} style={{textColor:'black',\n                                border:'1px solid #ccc',\n                                backgroundColor: '#f2f2f2',\n                                padding: '5px',\n                                fontSize:'14px',\n                                margin: '5px 5px',\n                                }}>\n                                <div>\n                                <h5>{review.user.username}</h5>\n                                <p>{review.comment}</p>\n                                </div>\n                            </li>\n                            ))}\n                        </ul>\n                        <div style={{minHeight:'100px'}}></div>\n                </div>\n                {/* display other details */}\n            </div>\n            ) : (\n                <p>Loading...</p>\n        )}\n        </div>\n    )\n}\n\nexport default MyRestaurant;","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/LoginForm.js",["84"],[],"import React, { useEffect, useState } from \"react\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    if (!username || !password || (!isLogin && (!email || !confirmPassword))) {\n      alert(\"Please fill out all required fields\");\n      return;\n    }\n\n    function fetchUsers(){\n    fetch (\"http://localhost:9292/users\") \n    .then((resp) =>resp.json())\n    .then((data)=>{\n\n      const foundUser = data.find((user) => user.username === username && user.password === password);\n\n      if (foundUser) {\n        // Log in the user\n        alert(\"User logged in successfully\");\n      } else {\n        // Show an error message to the user\n        alert(\"Username or password is incorrect\");\n      }\n    });;\n    }\n\n  function signUp() {\n\n    fetch(\"http://localhost:9292/users\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(data)\n        const userExists = data.find((user) => user.name === username || user.email === email);\n        if (userExists) {\n          alert(\"Username or email already exists\");\n          } else {\n            fetch(\"http://localhost:9292/users\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                username,\n                password,\n                email,\n              }),\n            })\n              .then((resp) => resp.json())\n              .then((data) => {\n                alert(\"User signed up successfully\");\n              })\n              .catch((error) => {\n                alert(error.message)\n                console.error(\"Error signing up the user:\", error);\n              });\n          }\n        });\n  }\n\n    if (isLogin) {\n      // Send a request to the server to log the user in\n      fetchUsers();\n    } else {\n      // Send a request to the server to sign the user up\n      signUp();\n    }\n  };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return (\n    <div \n    style={{\n      background: 'white',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px #ccc'\n    }} \n    >\n      <form onSubmit={handleSubmit}>\n        \n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </label>\n        <br />\n        {!isLogin && (\n          <label>\n            Email:\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </label>\n        )}\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <br />\n        {!isLogin && (\n            <label>\n            Confirm Password:\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </label>\n        )}\n        <br />\n        <button className=\"btn btn-success\" style={{float:'left',}}  onClick={handleSubmit} type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button> \n        <button className=\"btn btn-success\" style={{float:'right',}} type=\"button\" onClick={toggleForm}>\n          {isLogin ? \"Sign Up\" : \"Login\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n\n","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Footer.js",["85","86","87"],[],"import React from \"react\";\n\nconst Footer=()=>{\n\n    return(\n        <div className=\"fixed-bottom\"\n        style={{\n            backgroundColor: \"coral\",\n            minHeight:'80px',\n          }}>\n            <h3\n            style={{\n                textColor: \"black\",\n                paddingTop:\"5px\",\n                fontSize:\"15px\",\n                textAlign: \"center\",\n              }}>TuleWapi</h3>\n\n            <p\n            style={{\n                textColor: \"black\",\n                paddingTop:\"5px\",\n                fontSize:\"12px\",\n                textAlign: \"center\",\n              }}>Find Popular Restaurants Near You</p>\n\n             <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n      <div style={{display:'inline-flex',\n      fontSize:'12px',\n      marginBottom:'10px',\n      color:'black',}}>\n          {/* <a className=\"socials\"><i className=\"fa-brands fa-twitter\"></i></a> */}\n          <a style={{paddingRight:'10px',color:'black',}} className=\"socials\"><i className=\"fab fa-facebook-f\"></i></a>\n          <a style={{paddingLeft:'1px',color:'black',}} className=\"socials\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i></a>\n        </div>\n\n        </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Explore.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/SearchResults.js",["88"],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/SearchBar.js",[],[],"/home/elvis/Desktop/Moringa/code/Phase-3/tulewapi-front-end/tulewapi/src/components/Admin.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":28,"column":9,"nodeType":"91","endLine":28,"endColumn":50},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":23,"column":8,"nodeType":"98","endLine":23,"endColumn":12,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":39,"column":11,"nodeType":"91","endLine":39,"endColumn":79},{"ruleId":"89","severity":1,"message":"90","line":40,"column":11,"nodeType":"91","endLine":40,"endColumn":77},{"ruleId":"100","severity":1,"message":"101","line":40,"column":11,"nodeType":"91","endLine":40,"endColumn":77},{"ruleId":"92","severity":1,"message":"102","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRestaurant'. Either include it or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'SearchBar' is defined but never used.",{"desc":"104","fix":"105"},"Update the dependencies array to be: [getRestaurant, id]",{"range":"106","text":"107"},[542,546],"[getRestaurant, id]"]