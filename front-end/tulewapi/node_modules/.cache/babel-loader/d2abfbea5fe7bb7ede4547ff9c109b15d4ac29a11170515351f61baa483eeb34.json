{"ast":null,"code":"var _jsxFileName = \"/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n  const modalRef = React.useRef();\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleCloseModal();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleCloseModal, modalRef]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    function fetchUsers() {\n      fetch(\" http://localhost:8001/user\").then(resp => resp.json()).then(data => {\n        const foundUser = data.find(user => user.name === username && user.password === password);\n        if (foundUser) {\n          // Log in the user\n          alert(\"User logged in successfully\");\n        } else {\n          // Show an error message to the user\n          alert(\"Username or password is incorrect\");\n        }\n      });\n      ;\n    }\n    function signUp() {\n      fetch(\"http://localhost:8001/user\").then(resp => resp.json()).then(data => {\n        const userExists = data.find(user => user.name === username || user.email === email);\n        if (userExists) {\n          alert(\"Username or email already exists\");\n        } else {\n          fetch(\"http://localhost:8001/user\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              username,\n              password,\n              email\n            })\n          }).then(resp => resp.json()).then(data => {\n            alert(\"User signed up successfully\");\n          }).catch(error => {\n            alert(error.message);\n            console.error(\"Error signing up the user:\", error);\n          });\n        }\n      });\n    }\n    if (isLogin) {\n      // Send a request to the server to log the user in\n      fetchUsers();\n    } else {\n      // Send a request to the server to sign the user up\n      signUp();\n    }\n  };\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    handleCloseModal: handleCloseModal,\n    style: {\n      background: 'white',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px #ccc'\n    },\n    ref: modalRef,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          float: 'left'\n        },\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          float: 'right'\n        },\n        type: \"button\",\n        onClick: toggleForm,\n        children: isLogin ? \"Sign Up\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"/e6uxE0Y3gMu+d8HOf1Z81zGGyc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","LoginForm","username","setUsername","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","isLogin","setIsLogin","modalRef","useRef","handleClickOutside","event","current","contains","target","handleCloseModal","document","addEventListener","removeEventListener","handleSubmit","e","preventDefault","fetchUsers","fetch","then","resp","json","data","foundUser","find","user","name","alert","signUp","userExists","method","headers","body","JSON","stringify","catch","error","message","console","toggleForm","background","position","top","left","transform","padding","borderRadius","boxShadow","value","float"],"sources":["/home/elvis/Desktop/Moringa/code/Phase 2/tulewapi-react/tulewapi/src/components/LoginForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true);\n\n\n\n  const modalRef = React.useRef();\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleCloseModal();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleCloseModal, modalRef]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    function fetchUsers(){\n    fetch (\" http://localhost:8001/user\") \n    .then((resp) =>resp.json())\n    .then((data)=>{\n\n      const foundUser = data.find((user) => user.name === username && user.password === password);\n\n      if (foundUser) {\n        // Log in the user\n        alert(\"User logged in successfully\");\n      } else {\n        // Show an error message to the user\n        alert(\"Username or password is incorrect\");\n      }\n    });;\n    }\n\n  function signUp() {\n\n    fetch(\"http://localhost:8001/user\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        const userExists = data.find((user) => user.name === username || user.email === email);\n\n        if (userExists) {\n          alert(\"Username or email already exists\");\n          } else {\n            fetch(\"http://localhost:8001/user\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                username,\n                password,\n                email,\n              }),\n            })\n              .then((resp) => resp.json())\n              .then((data) => {\n                alert(\"User signed up successfully\");\n              })\n              .catch((error) => {\n                alert(error.message)\n                console.error(\"Error signing up the user:\", error);\n              });\n          }\n        });\n  }\n\n    if (isLogin) {\n      // Send a request to the server to log the user in\n      fetchUsers();\n    } else {\n      // Send a request to the server to sign the user up\n      signUp();\n    }\n  };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return (\n    <div handleCloseModal={handleCloseModal} \n    style={{\n      background: 'white',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      borderRadius: '10px',\n      boxShadow: '0px 0px 10px #ccc'\n    }} ref={modalRef}>\n      <form onSubmit={handleSubmit}>\n        \n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <br />\n        {!isLogin && (\n          <div>\n            <label>\n            Confirm Password:\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </label>\n          <br />\n          <label>\n            Email:\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </label>\n          </div>\n\n        )}\n        <br />\n        <button className=\"btn btn-success\" style={{float:'left',}}  onClick={handleSubmit} type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button> \n        <button className=\"btn btn-success\" style={{float:'right',}} type=\"button\" onClick={toggleForm}>\n          {isLogin ? \"Sign Up\" : \"Login\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}